gestion_Monitoring/test/degirum_lib $ python dg_try.py 
Available models in the model zoo: {'yolov8n_seg_custom': <degirum.aiclient.ModelParams object at 0x7fffa5f582f0>, 'yolov8n_relu6_coco_seg--640x640_quant_hailort_hailo8_1': <degirum.aiclient.ModelParams object at 0x7fffa56b5a70>, 'yolov8n_seg': <degirum.aiclient.ModelParams object at 0x7fffa5f5bf30>}
size of the input image : (640, 640, 3)
Shape of the input tensor : (1, 640, 640, 3)
Inference result: [{'data': array([[[ 50],
        [ 41],
        [ 30],
        [ 30],
        [ 24],
        [ 22],
        [ 26],
        [ 29],
        [ 32],
        [ 34],
        [ 36],
        [ 38],
        [ 37],
        [ 33],
        [ 35],
        [ 42],
        [ 51],
        [ 57],
        [ 56],
        [ 58],
        [ 51],
        [ 36],
        [ 20],
        [ 20],
        [ 13],
        [ 19],
        [ 22],
        [ 22],
        [ 20],
        [ 20],
        [ 26],
        [ 30],
        [ 30],
        [ 26],
        [ 31],
        [ 46],
        [ 58],
        [ 60],
        [ 59],
        [ 56],
        [ 57],
        [ 46],
        [ 29],
        [ 29],
        [ 24],
        [ 28],
        [ 30],
        [ 33],
        [ 30],
        [ 31],
        [ 38],
        [ 42],
        [ 40],
        [ 38],
        [ 47],
        [ 61],
        [ 71],
        [ 70],
        [ 64],
        [ 58],
        [ 77],
        [ 72],
        [ 53],
        [ 51],
        [ 51],
        [ 51],
        [ 45],
        [ 40],
        [ 39],
        [ 39],
        [ 44],
        [ 46],
        [ 44],
        [ 45],
        [ 54],
        [ 69],
        [ 78],
        [ 75],
        [ 72],
        [ 66],
        [ 99],
        [106],
        [ 92],
        [ 84],
        [ 84],
        [ 79],
        [ 60],
        [ 48],
        [ 45],
        [ 47],
        [ 46],
        [ 42],
        [ 42],
        [ 47],
        [ 64],
        [ 81],
        [ 82],
        [ 81],
        [ 86],
        [ 83],
        [115],
        [124],
        [111],
        [101],
        [100],
        [ 96],
        [ 81],
        [ 70],
        [ 70],
        [ 66],
        [ 57],
        [ 47],
        [ 50],
        [ 60],
        [ 76],
        [ 80],
        [ 80],
        [ 84],
        [ 98],
        [ 98],
        [118],
        [128],
        [115],
        [103],
        [100],
        [ 94],
        [ 81],
        [ 76],
        [ 79],
        [ 73],
        [ 59],
        [ 51],
        [ 63],
        [ 73],
        [ 86],
        [ 80],
        [ 83],
        [ 87],
        [104],
        [104],
        [116],
        [128],
        [118],
        [108],
        [101],
        [ 94],
        [ 81],
        [ 78],
        [ 84],
        [ 67],
        [ 52],
        [ 52],
        [ 66],
        [ 74],
        [ 80],
        [ 78],
        [ 82],
        [ 88],
        [103],
        [ 99],
        [114],
        [132],
        [124],
        [114],
        [108],
        [101],
        [ 87],
        [ 85],
        [ 94],
        [ 62],
        [ 45],
        [ 47],
        [ 60],
        [ 67],
        [ 69],
        [ 76],
        [ 80],
        [ 86],
        [100],
        [ 97],
        [114],
        [135],
        [129],
        [120],
        [112],
        [105],
        [ 99],
        [116],
        [123],
        [ 73],
        [ 53],
        [ 50],
        [ 54],
        [ 76],
        [ 84],
        [ 88],
        [ 94],
        [ 89],
        [ 93],
        [ 94],
        [116],
        [140],
        [132],
        [121],
        [110],
        [102],
        [104],
        [140],
        [144],
        [ 95],
        [ 72],
        [ 67],
        [ 64],
        [101],
        [135],
        [131],
        [114],
        [ 90],
        [ 81],
        [ 82],
        [121],
        [144],
        [133],
        [117],
        [105],
        [ 95],
        [109],
        [177],
        [164],
        [128],
        [105],
        [110],
        [ 87],
        [121],
        [174],
        [184],
        [148],
        [101],
        [ 76],
        [ 74],
        [126],
        [145],
        [130],
        [112],
        [103],
        [ 95],
        [128],
        [196],
        [172],
        [159],
        [144],
        [155],
        [137],
        [132],
        [187],
        [201],
        [182],
        [127],
        [ 92],
        [ 81],
        [128],
        [143],
        [127],
        [106],
        [107],
        [107],
        [154],
        [216],
        [186],
        [190],
        [184],
        [174],
        [183],
        [130],
        [161],
        [182],
        [174],
        [139],
        [104],
        [ 87],
        [124],
        [136],
        [117],
        [ 96],
        [105],
        [104],
        [179],
        [232],
        [192],
        [208],
        [209],
        [172],
        [197],
        [133],
        [116],
        [129],
        [128],
        [119],
        [100],
        [ 80],
        [116],
        [126],
        [106],
        [ 87],
        [ 85],
        [ 70],
        [187],
        [214],
        [166],
        [202],
        [197],
        [141],
        [173],
        [123],
        [ 78],
        [ 80],
        [ 80],
        [ 81],
        [ 79],
        [ 69],
        [112],
        [118],
        [103],
        [ 86],
        [ 72],
        [ 62],
        [162],
        [151],
        [106],
        [164],
        [145],
        [ 94],
        [115],
        [ 77],
        [ 51],
        [ 56],
        [ 55],
        [ 56],
        [ 66],
        [ 62],
        [106],
        [112],
        [103],
        [ 86],
        [ 63],
        [ 68],
        [ 99],
        [ 80],
        [ 49],
        [ 91],
        [ 93],
        [ 56],
        [ 72],
        [ 43],
        [ 33],
        [ 53],
        [ 43],
        [ 50],
        [ 73],
        [ 67],
        [102],
        [113],
        [106],
        [ 85],
        [ 56],
        [ 71],
        [ 67],
        [ 29],
        [ 20],
        [ 67],
        [ 48],
        [ 43],
        [ 59],
        [ 34],
        [ 22],
        [ 52],
        [ 44],
        [ 52],
        [ 74],
        [ 70],
        [ 86],
        [101],
        [103],
        [ 92],
        [ 69],
        [ 70],
        [ 55],
        [ 36],
        [ 39],
        [ 62],
        [ 41],
        [ 49],
        [ 56],
        [ 51],
        [ 42],
        [ 57],
        [ 58],
        [ 61],
        [ 71],
        [ 70]]], dtype=uint8), 'id': 0, 'name': 'yolov8n-seg/conv48', 'quantization': {'axis': -1, 'scale': [0.028945166617631912], 'zero': [255]}, 'shape': [1, 400, 1], 'size': 400, 'type': 'DG_UINT8'}]
Inference result type: <class 'degirum.postprocessor.InferenceResults'>
Inference result attributes: ['image', 'image_model', 'image_overlay', 'info', 'results', 'timing', 'type']
qt.qpa.plugin: Could not find the Qt platform plugin "wayland" in "/home/william-stengg/Desktop/hailo-rpi5-examples/venv_hailo_rpi5_examples/lib/python3.11/site-packages/cv2/qt/plugins"
^C^Z
[1]+  Stopped                 python dg_try.py
(venv_hailo_rpi5_examples) william-stengg@raspberrypi:~/Desktop/sweta_LCM/Lane_Cogestion_Monitoring/test/degirum_lib $ 
(venv_hailo_rpi5_examples) william-stengg@raspberrypi:~/Desktop/sweta_LCM/Lane_Cogestion_Monitoring/test/degirum_lib $ 
(venv_hailo_rpi5_examples) william-stengg@raspberrypi:~/Desktop/sweta_LCM/Lane_Cogestion_Monitoring/test/degirum_lib $ 
(venv_hailo_rpi5_examples) william-stengg@raspberrypi:~/Desktop/sweta_LCM/Lane_Cogestion_Monitoring/test/degirum_lib $ 






output layers :

Output best_v8/conv50 UINT8, FCR(80x80x64)
Output best_v8/conv67 UINT8, FCR(40x40x64)
Output best_v8/conv81 UINT8, NHWC(20x20x64)
Output best_v8/conv68 UINT8, NHWC(40x40x1)
Output best_v8/conv82 UINT8, NHWC(20x20x1)
Output best_v8/conv52 UINT8, FCR(80x80x32)
Output best_v8/conv69 UINT8, FCR(40x40x32)
Output best_v8/conv83 UINT8, NHWC(20x20x32)
Output best_v8/conv54 UINT8, FCR(160x160x32)
Output best_v8/conv51 UINT8, NHWC(80x80x1)


from netron app

/model.22/proto/cv3/conv/Conv - float32[1,32,160,160]
/model.22/cv2.0/cv2.0.2/Conv -  float32[1,64,80,80]
/model.22/cv3.0/cv3.0.2/Conv -  float32[1,1,80,80]

/model.22/cv4.0/cv4.0.2/Conv -  float32[1,32,80,80]
/model.22/cv4.1/cv4.1.2/Conv -  float32[1,32,40,40]
/model.22/cv4.2/cv4.2.2/Conv -  float32[1,32,20,20]

/model.22/cv2.1/cv2.1.2/Conv -  float32[1,64,40,40]
